$PBExportHeader$f_select_prestamo_permisos.srf
global type f_select_prestamo_permisos from function_object
end type

forward prototypes
global subroutine f_select_pres_permisos ()
global subroutine f_select_prestamo_permisos (ref str_pres_permisos p_permisos, integer p_depto, integer p_area)
end prototypes

global subroutine f_select_pres_permisos ();//Buscar si tiene material vencido sin multa en el departamento y área

datetime ldt_fecha, ldt_ahorita
integer li_row, li_i, ll_id_multa=0
long ll_folio, ll_folioan=0, ll_folio_multa=0, ll_solicitante, ll_consec
integer li_cvegrupo=0, li_tipo_usuario
string ls_num_serie='', ls_cvematerial=''

ldt_fecha= datetime(today(),time('00:00:00'))
ldt_ahorita=datetime(today(),now())

datastore lds_mat_vencidos

lds_mat_vencidos =  create datastore

lds_mat_vencidos.dataobject ='d_gen_mat_vencidos'
lds_mat_vencidos.settransobject(gtr_sumuia)	
lds_mat_vencidos.Retrieve(gi_depto,gi_area,ldt_fecha)
li_row = lds_mat_vencidos.Rowcount()

for li_i=1 to li_row
	
	ll_folio=lds_mat_vencidos.GetItemNumber(li_i,'spre_sol_materiales_folio')
	
	if ll_folio<>ll_folioan then
	
			//Nuevo Folio de multa
			ll_folio_multa=0
			
			select max(folio_multa)
			into :ll_folio_multa
			from dbo.spre_multas 
			using gtr_sumuia; 
			
			if gtr_sumuia.SQLCode = -1 then 
				messagebox("Error SUMUIA: Obtener Máximo Folio Multa", gtr_sumuia.SQLErrText)	
				rollback using gtr_sumuia;
				goto salir
			else
				commit using gtr_sumuia;	
			end if
			
			ll_folio_multa=ll_folio_multa+1
			
			//Insertar multa
			insert into dbo.spre_multas
			(folio_multa, folio, importe, saldo, cvedepto, fcaja, foperacion, fcorte, fechacarga, usuario)
			 
			values
			(:ll_folio_multa,:ll_folio,0,0,:gi_depto,0,0,0,:ldt_ahorita,:gs_usuario)
		
			using gtr_sumuia;	
			
			if gtr_sumuia.sqlcode<>0 then
				messagebox("Error al insertar multa: "+string(gtr_sumuia.sqlcode), gtr_sumuia.SQLErrText)
				rollback using gtr_sumuia;
				goto salir
			else
				commit using gtr_sumuia;
				messagebox('Atención','Se generó la Multa '+string(ll_folio_multa)+' para el material no entregado del Préstamo: '+string(ll_folio),Exclamation!)
			end if	
			
			
	end if
	

	//Material de multa
		ll_id_multa=0
	
		select max(id_multa)
		into :ll_id_multa
		from dbo.spre_materiales_multas 
		using gtr_sumuia; 
				
		if gtr_sumuia.SQLCode = -1 then 
			messagebox("Error SUMUIA: Obtener Máximo Id Multa", gtr_sumuia.SQLErrText)	
			rollback using gtr_sumuia;
			goto salir
		else
			commit using gtr_sumuia;	
		end if
				
		ll_id_multa=ll_id_multa+1
		
		li_cvegrupo=lds_mat_vencidos.GetItemNumber(li_i,'spre_sol_materiales_cvegrupo')
		ls_cvematerial=lds_mat_vencidos.GetItemString(li_i,'spre_sol_materiales_cvematerial')
		ls_num_serie=lds_mat_vencidos.GetItemString(li_i,'spre_sol_materiales_num_serie')
		ll_consec=lds_mat_vencidos.GetItemNumber(li_i,'spre_sol_materiales_consecutivo')
		
		//Insertar Material
		insert into dbo.spre_materiales_multas
		(id_multa, folio_multa, cvedepto, cvearea, cvematerial, cvegrupo, num_serie, status, importe)

		values
		(:ll_id_multa, :ll_folio_multa, :gi_depto, :gi_area, :ls_cvematerial, :li_cvegrupo, :ls_num_serie, 0,0)
	
		using gtr_sumuia;	
		
		if gtr_sumuia.sqlcode<>0 then
			messagebox("Error al insertar multa: "+string(gtr_sumuia.sqlcode), gtr_sumuia.SQLErrText)
			rollback using gtr_sumuia;
			goto salir
		else
			commit using gtr_sumuia;
		end if	
	
		//Actualizar el estatus de la solicitud
		
		update dbo.spre_solicitud
		set status=3
		where cvedepto=:gi_depto
		and folio=:ll_folio
		using gtr_sumuia;	
		
		if gtr_sumuia.sqlcode<>0 then
			messagebox("Error al actualizar la solicitud "+string(gtr_sumuia.sqlcode), gtr_sumuia.SQLErrText)
			rollback using gtr_sumuia;
			goto salir
		else
			commit using gtr_sumuia;
		end if			
		
		//Actualizar el estatus de los materiales

		update dbo.spre_sol_materiales
		set status=3
		where cvedepto=:gi_depto
		and folio=:ll_folio
		and consecutivo=:ll_consec
		using gtr_sumuia;	
		
		if gtr_sumuia.sqlcode<>0 then
			messagebox("Error al actualizar el material "+string(gtr_sumuia.sqlcode), gtr_sumuia.SQLErrText)
			rollback using gtr_sumuia;
			goto salir
		else
			commit using gtr_sumuia;
		end if	
	
		ll_folioan=ll_folio

next

salir:
end subroutine

global subroutine f_select_prestamo_permisos (ref str_pres_permisos p_permisos, integer p_depto, integer p_area);integer li_row, li_i, li_per
string ls_observacion
datastore lds_permisos

lds_permisos =  create datastore

lds_permisos.dataobject ='d_gen_pres_permisos'
lds_permisos.settransobject(gtr_sumuia)	
lds_permisos.Retrieve(p_depto,p_area)
li_row = lds_permisos.Rowcount()


p_permisos.fecha=0
p_permisos.vigente=0
p_permisos.materias_a=0
p_permisos.materias_p=0
p_permisos.materiales=0
p_permisos.suspendido=0
p_permisos.concurrente_p=0

for li_i=1 to li_row
	
	li_per=lds_permisos.GetItemNumber(li_i,'cvepermiso')
	ls_observacion=lds_permisos.GetItemString(li_i,'observacion')

	choose case li_per
		case 1
			p_permisos.fecha=1
		case 2
			p_permisos.vigente=1
		case 3
			p_permisos.materias_a=1
		case 4
			p_permisos.materias_p=1
		case 5
			p_permisos.materiales=integer(ls_observacion)
		case 6
			p_permisos.suspendido=integer(ls_observacion)
		case 7 
			p_permisos.concurrente_p=1
	end choose
	
next

end subroutine

